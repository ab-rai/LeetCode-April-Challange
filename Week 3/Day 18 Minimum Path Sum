/*
Difficulty Level=6
Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the
sum of all numbers along its path.
Note: You can only move either down or right at any point in time.
*/
class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int rowSize=grid.size();
        if(rowSize==0)
            return 0;
        int colSize=grid[0].size();
        for(int i=1;i<rowSize;i++)
        {
            grid[i][0]+=grid[i-1][0];
        }
        for(int j=1;j<colSize;j++)
        {
            grid[0][j]+=grid[0][j-1];
        }
        for(int i=1;i<rowSize;i++)
        {
            for(int j=1;j<colSize;j++)
            {
                grid[i][j]+=min(grid[i-1][j],grid[i][j-1]);
            }
        }
        return grid[rowSize-1][colSize-1];
    }
};
//Time Complexity:- O(n*m)
//Space Complexity:- O(1)
