/*
You are given a string s containing lowercase English letters, and a matrix shift, where shift[i] = [direction, amount]:

  -direction can be 0 (for left shift) or 1 (for right shift). 
  -amount is the amount by which string s is to be shifted.
  -A left shift by 1 means remove the first character of s and append it to the end.
  -Similarly, a right shift by 1 means remove the last character of s and add it to the beginning.
Return the final string after all operations.
*/
class Solution {
public:
    string stringShift(string s, vector<vector<int>>& shift) {
        int len=s.size();
        for(vector<int> oneShift:shift)
        {
            int dir=oneShift[0];
            int shiftCnt=oneShift[1]%len;
            string tempStr;
            if(dir)//means dir==1
            {
                tempStr=s.substr(len-shiftCnt);
                tempStr+=(s.substr(0,len-shiftCnt));
                cout<<"in if = "<<tempStr<<endl;
            }
            else
            {
                
                tempStr=s.substr(shiftCnt);
                tempStr+=(s.substr(0,shiftCnt));
                cout<<"in else = "<<tempStr<<endl;
            }
            s=tempStr;
        }
        return s;
    }
};
